{"version":3,"file":"static/chunks/8447.a9474730b6a71091.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/app/FeatureFlags.oss.tsx","webpack://_N_E/../ui-core/src/app/DefaultFeatureFlags.oss.tsx","webpack://_N_E/../ui-core/src/hooks/useStateWithStorage.tsx","webpack://_N_E/../ui-core/src/app/Flags.tsx","webpack://_N_E/../ui-core/src/workers/WorkerThread.oss.ts","webpack://_N_E/../../node_modules/@vx/shape/esm/shapes/link/diagonal/LinkVertical.js","webpack://_N_E/../ui-core/src/util/weakMapMemoize.ts","webpack://_N_E/../ui-core/src/util/hashObject.ts","webpack://_N_E/../ui-core/src/util/idb-lru-cache.ts","webpack://_N_E/../ui-core/src/app/Util.tsx","webpack://_N_E/../ui-core/src/asset-graph/Utils.tsx","webpack://_N_E/../ui-core/src/asset-graph/layout.ts","webpack://_N_E/../ui-core/src/app/titleOfIO.ts","webpack://_N_E/../ui-core/src/graph/layout.ts","webpack://_N_E/../ui-core/src/workers/dagre_layout.worker.ts","webpack://_N_E/../../node_modules/lodash/memoize.js","webpack://_N_E/webpack/bootstrap","webpack://_N_E/webpack/runtime/chunk loaded","webpack://_N_E/webpack/runtime/compat get default export","webpack://_N_E/webpack/runtime/define property getters","webpack://_N_E/webpack/runtime/ensure chunk","webpack://_N_E/webpack/runtime/get javascript chunk filename","webpack://_N_E/webpack/runtime/get mini-css chunk filename","webpack://_N_E/webpack/runtime/global","webpack://_N_E/webpack/runtime/hasOwnProperty shorthand","webpack://_N_E/webpack/runtime/node module decorator","webpack://_N_E/webpack/runtime/trusted types policy","webpack://_N_E/webpack/runtime/trusted types script url","webpack://_N_E/webpack/runtime/publicPath","webpack://_N_E/webpack/runtime/importScripts chunk loading","webpack://_N_E/webpack/runtime/startup chunk dependencies","webpack://_N_E/webpack/before-startup","webpack://_N_E/webpack/startup","webpack://_N_E/webpack/after-startup"],"sourcesContent":["export enum FeatureFlag {\n  flagDebugConsoleLogging = 'flagDebugConsoleLogging',\n  flagDisableWebsockets = 'flagDisableWebsockets',\n  flagSidebarResources = 'flagSidebarResources',\n  flagDisableAutoLoadDefaults = 'flagDisableAutoLoadDefaults',\n  flagAssetNodeFacets = 'flagAssetNodeFacets',\n  flagUseNewObserveUIs = 'flagUseNewObserveUIs',\n  flagMarketplace = 'flagMarketplace',\n  flagDocsInApp = 'flagDocsInApp',\n\n  // Flags for tests\n  __TestFlagDefaultNone = '__TestFlagDefaultNone',\n  __TestFlagDefaultTrue = '__TestFlagDefaultTrue',\n  __TestFlagDefaultFalse = '__TestFlagDefaultFalse',\n}\n","import {FeatureFlag} from 'shared/app/FeatureFlags.oss';\n\n/**\n * Default values for feature flags when they are unset.\n */\nexport const DEFAULT_FEATURE_FLAG_VALUES: Partial<Record<FeatureFlag, boolean>> = {\n  [FeatureFlag.flagAssetNodeFacets]: true,\n  [FeatureFlag.flagDocsInApp]: true,\n\n  // Flags for tests\n  [FeatureFlag.__TestFlagDefaultTrue]: true,\n  [FeatureFlag.__TestFlagDefaultFalse]: false,\n};\n","import * as React from 'react';\n\nexport function getJSONForKey(key: string) {\n  let stored = undefined;\n  try {\n    if (typeof window === 'undefined') {\n      stored = self.localStorage.getItem(key);\n    } else {\n      stored = window.localStorage.getItem(key);\n    }\n    if (stored) {\n      return JSON.parse(stored);\n    }\n  } catch {\n    if (typeof stored === 'string') {\n      // With useStateWithStorage, some values like timezone are moving from `UTC` to `\"UTC\"`\n      // in LocalStorage. To read the old values, pass through raw string values. We can\n      // remove this a few months after 0.14.1 is released.\n      return stored;\n    }\n    return undefined;\n  }\n}\n\nconst DID_WRITE_LOCALSTORAGE = '';\n\nexport function useStateWithStorage<T>(key: string, validate: (json: any) => T) {\n  const [version, setVersion] = React.useState(0);\n\n  const validateRef = React.useRef(validate);\n  validateRef.current = validate;\n\n  const listener = React.useCallback(\n    (event: Event) => {\n      if (event instanceof CustomEvent && event.detail === key) {\n        setVersion((v) => v + 1);\n      }\n    },\n    [key],\n  );\n\n  React.useEffect(() => {\n    document.addEventListener(DID_WRITE_LOCALSTORAGE, listener);\n    return () => document.removeEventListener(DID_WRITE_LOCALSTORAGE, listener);\n  }, [listener]);\n\n  // Note: This hook doesn't keep the loaded data in state -- instead it uses a version bit and\n  // a ref to load the value from localStorage when the `key` changes or when the `version` changes.\n  // This allows us to immediately return the saved value for `key` in the same render.\n\n  const state = React.useMemo(() => {\n    return validate(getJSONForKey(key));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [validate, key, version]);\n\n  const setStateInner = React.useCallback(\n    (next: T | undefined) => {\n      if (next === undefined) {\n        window.localStorage.removeItem(key);\n      } else {\n        window.localStorage.setItem(key, JSON.stringify(next));\n      }\n      document.removeEventListener(DID_WRITE_LOCALSTORAGE, listener);\n      document.dispatchEvent(new CustomEvent(DID_WRITE_LOCALSTORAGE, {detail: key}));\n      document.addEventListener(DID_WRITE_LOCALSTORAGE, listener);\n\n      setVersion((v) => v + 1);\n\n      return next;\n    },\n    [key, listener],\n  );\n\n  const setState = React.useCallback(\n    (input: React.SetStateAction<T>) => {\n      const next =\n        input instanceof Function ? input(validateRef.current(getJSONForKey(key))) : input;\n      setStateInner(next);\n    },\n    [key, setStateInner],\n  );\n\n  const clearState = React.useCallback(() => {\n    setStateInner(undefined);\n  }, [setStateInner]);\n\n  return [state, setState, clearState] as const;\n}\n","import {useEffect, useState} from 'react';\nimport {DEFAULT_FEATURE_FLAG_VALUES} from 'shared/app/DefaultFeatureFlags.oss';\nimport {FeatureFlag} from 'shared/app/FeatureFlags.oss';\n\nimport {getJSONForKey} from '../hooks/useStateWithStorage';\n\nexport const DAGSTER_FLAGS_KEY = 'DAGSTER_FLAGS';\n\nexport const WEB_WORKER_FEATURE_FLAGS_KEY = '__featureFlags';\n\n/**\n * Type representing the mapping of feature flags to their boolean states.\n */\ntype FeatureFlagMap = Partial<Record<FeatureFlag, boolean>>;\n\n/**\n * In-memory cache for feature flags, excludes default values.\n */\nlet currentFeatureFlags: FeatureFlagMap = {};\n\n/**\n * Initialize the in-memory cache by loading from localStorage and handling migration.\n */\nconst initializeFeatureFlags = () => {\n  let flags = getJSONForKey(DAGSTER_FLAGS_KEY);\n\n  // Handle backward compatibility by migrating array to object\n  if (Array.isArray(flags)) {\n    const migratedFlags: FeatureFlagMap = {};\n    flags.forEach((flag: FeatureFlag) => {\n      migratedFlags[flag] = true;\n    });\n    setFeatureFlagsInternal(migratedFlags);\n    flags = migratedFlags;\n  }\n\n  currentFeatureFlags = flags || {};\n};\n\n/**\n * Internal function to set feature flags without broadcasting.\n * Used during initialization and migration and by web-workers.\n */\nexport const setFeatureFlagsInternal = (flags: FeatureFlagMap) => {\n  if (typeof flags !== 'object' || Array.isArray(flags)) {\n    throw new Error('flags must be an object mapping FeatureFlag to boolean values');\n  }\n  currentFeatureFlags = flags;\n  if (typeof localStorage !== 'undefined') {\n    localStorage.setItem(DAGSTER_FLAGS_KEY, JSON.stringify(flags));\n  }\n};\n\n// Initialize the BroadcastChannel\nconst featureFlagsChannel = new BroadcastChannel('feature-flags');\n\n// Initialize feature flags on module load\ninitializeFeatureFlags();\n\nexport const getFeatureFlagsWithoutDefaultValues = (): FeatureFlagMap => {\n  return currentFeatureFlags;\n};\n\nexport const getFeatureFlagDefaults = (): FeatureFlagMap => {\n  return DEFAULT_FEATURE_FLAG_VALUES;\n};\n\nexport const getFeatureFlagsWithDefaults = (): FeatureFlagMap => {\n  return {...DEFAULT_FEATURE_FLAG_VALUES, ...currentFeatureFlags};\n};\n\n/**\n * Function to check if a specific feature flag is enabled.\n * Falls back to default values if the flag is unset.\n */\nexport const featureEnabled = (flag: FeatureFlag): boolean => {\n  if (flag in currentFeatureFlags) {\n    return currentFeatureFlags[flag]!;\n  }\n\n  // Return default value if flag is unset\n  return DEFAULT_FEATURE_FLAG_VALUES[flag] ?? false;\n};\n\n/**\n * Hook to access feature flags within React components.\n * Returns a flag map with resolved values (considering defaults).\n */\nexport const useFeatureFlags = (): Readonly<Record<FeatureFlag, boolean>> => {\n  const [flags, setFlags] = useState<Record<FeatureFlag, boolean>>(() => {\n    const allFlags: Partial<Record<FeatureFlag, boolean>> = {};\n\n    for (const flag in FeatureFlag) {\n      const key = flag as FeatureFlag;\n      if (key in currentFeatureFlags) {\n        allFlags[key] = currentFeatureFlags[key];\n      } else {\n        allFlags[key] = DEFAULT_FEATURE_FLAG_VALUES[key] ?? false;\n      }\n    }\n    return allFlags as Record<FeatureFlag, boolean>;\n  });\n\n  useEffect(() => {\n    const handleFlagsChange = () => {\n      const allFlags: Partial<Record<FeatureFlag, boolean>> = {};\n\n      for (const flag in FeatureFlag) {\n        const key = flag as FeatureFlag;\n        if (key in currentFeatureFlags) {\n          allFlags[key] = currentFeatureFlags[key];\n        } else {\n          allFlags[key] = DEFAULT_FEATURE_FLAG_VALUES[key] ?? false;\n        }\n      }\n      setFlags(allFlags as Record<FeatureFlag, boolean>);\n    };\n\n    // Listen for messages from the BroadcastChannel\n    featureFlagsChannel.addEventListener('message', handleFlagsChange);\n\n    return () => {\n      featureFlagsChannel.removeEventListener('message', handleFlagsChange);\n    };\n  }, []);\n\n  return flags;\n};\n\n/**\n * Function to update feature flags.\n * Updates the in-memory cache, persists to localStorage, and broadcasts the change.\n */\nexport const setFeatureFlags = (flags: FeatureFlagMap, broadcast: boolean = true) => {\n  setFeatureFlagsInternal(flags);\n  if (broadcast) {\n    featureFlagsChannel.postMessage('updated');\n  }\n};\n\nexport const toggleFeatureFlag = (flag: FeatureFlag) => {\n  const flags = getFeatureFlagsWithDefaults();\n  flags[flag] = !flags[flag];\n  setFeatureFlags(flags);\n  featureFlagsChannel.postMessage('updated');\n};\n","import {WEB_WORKER_FEATURE_FLAGS_KEY, setFeatureFlags} from '../app/Flags';\n\nexport const createWorkerThread = (\n  onMessage: (postMessage: (message: any) => void, data: any) => Promise<void>,\n  onError: (postMessage: (message: any) => void, error: Error, event: MessageEvent) => void,\n) => {\n  self.addEventListener('message', async (event) => {\n    try {\n      if (event.data[WEB_WORKER_FEATURE_FLAGS_KEY]) {\n        // Don't broadcast the feature flags update to the main thread.\n        // or we will end up in an infinite loop.\n        setFeatureFlags(event.data[WEB_WORKER_FEATURE_FLAGS_KEY], false);\n      } else {\n        await onMessage(self.postMessage, event.data);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        self.postMessage({type: 'error', error: error.message, stack: error.stack});\n      } else {\n        self.postMessage({type: 'error', error: String(error), stack: undefined});\n      }\n      onError(self.postMessage, error as Error, event);\n    }\n  });\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { linkVertical } from 'd3-shape';\nexport function pathVerticalDiagonal(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y;\n  return function (data) {\n    var link = linkVertical();\n    link.x(x);\n    link.y(y);\n    link.source(source);\n    link.target(target);\n    return link(data);\n  };\n}\nLinkVertical.propTypes = {\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  x: PropTypes.func,\n  y: PropTypes.func,\n  source: PropTypes.func,\n  target: PropTypes.func,\n  path: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.func,\n  data: PropTypes.any\n};\nexport default function LinkVertical(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === void 0 ? function (d) {\n    return d.x;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === void 0 ? function (d) {\n    return d.y;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === void 0 ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === void 0 ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      children = _ref2.children,\n      restProps = _objectWithoutPropertiesLoose(_ref2, [\"className\", \"innerRef\", \"data\", \"path\", \"x\", \"y\", \"source\", \"target\", \"children\"]);\n\n  var pathGen = path || pathVerticalDiagonal({\n    source: source,\n    target: target,\n    x: x,\n    y: y\n  });\n  if (children) return children({\n    path: path\n  });\n  return React.createElement(\"path\", _extends({\n    ref: innerRef,\n    className: cx('vx-link vx-link-vertical-diagonal', className),\n    d: pathGen(data)\n  }, restProps));\n}","import LRU from 'lru-cache';\n\ntype AnyFunction = (...args: any[]) => any;\n\ninterface WeakMapMemoizeOptions {\n  maxEntries?: number; // Optional limit for cached entries\n  ttl?: number; // Time-To-Live in seconds\n}\n\ninterface CacheNode {\n  map: Map<any, CacheNode>;\n  weakMap: WeakMap<object, CacheNode>;\n  result?: any;\n  parent?: CacheNode;\n  parentKey?: any;\n  lruKey?: any; // Reference to the key in the LRU cache\n  childCount: number; // Number of child nodes\n  timeoutId?: ReturnType<typeof setTimeout>; // Timer for TTL eviction\n}\n\n/**\n * Determines if a value is a non-null object or function.\n * @param value - The value to check.\n * @returns True if the value is a non-null object or function, false otherwise.\n */\nfunction isObject(value: any): value is object {\n  return value !== null && (typeof value === 'object' || typeof value === 'function');\n}\n\n/**\n * Recursively deletes parent nodes if their childCount reaches zero.\n * @param cacheNode - The cache node to start deletion from.\n */\nfunction recursivelyDeleteParent(cacheNode: CacheNode) {\n  if (cacheNode.parent && cacheNode.parentKey !== undefined) {\n    const parent = cacheNode.parent;\n    const parentKey = cacheNode.parentKey;\n\n    // Remove the current cacheNode from its parent\n    if (isObject(parentKey)) {\n      parent.weakMap.delete(parentKey);\n    } else {\n      parent.map.delete(parentKey);\n    }\n\n    // Clear the TTL timer if set\n    if (cacheNode.timeoutId) {\n      clearTimeout(cacheNode.timeoutId);\n    }\n\n    // Decrement the parent's child count\n    parent.childCount--;\n\n    // If the parent's childCount reaches zero and it's not the root, recurse\n    if (parent.childCount === 0 && parent.parent) {\n      recursivelyDeleteParent(parent);\n    }\n  }\n}\n\n/**\n * Memoizes a function using nested Maps and WeakMaps based on the arguments.\n * Optionally limits the number of cached entries using an LRU cache and sets TTL for cache entries.\n * Handles both primitive and object arguments efficiently.\n * @param fn - The function to memoize.\n * @param options - Optional settings for memoization.\n * @returns A memoized version of the function.\n */\nexport function weakMapMemoize<T extends AnyFunction>(fn: T, options?: WeakMapMemoizeOptions): T {\n  const {maxEntries, ttl} = options || {};\n\n  // Initialize the root cache node\n  const cacheRoot: CacheNode = {\n    map: new Map(),\n    weakMap: new WeakMap(),\n    childCount: 0,\n  };\n\n  // Initialize LRU Cache if maxEntries is specified\n  let lruCache: LRU<any, CacheNode> | null = null;\n\n  if (maxEntries) {\n    lruCache = new LRU<any, CacheNode>({\n      max: maxEntries,\n      dispose: (_key, cacheNode) => {\n        // Remove the cached result\n        delete cacheNode.result;\n\n        // Clear the TTL timer if set\n        if (cacheNode.timeoutId) {\n          clearTimeout(cacheNode.timeoutId);\n        }\n\n        // If there are no child nodes, proceed to remove this node from its parent\n        if (cacheNode.childCount === 0 && cacheNode.parent && cacheNode.parentKey !== undefined) {\n          recursivelyDeleteParent(cacheNode);\n        }\n      },\n      noDisposeOnSet: false, // Ensure dispose is called on eviction\n    });\n  }\n\n  return function memoizedFunction(...args: any[]) {\n    let currentCache = cacheRoot;\n    const path: any[] = [];\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      path.push(arg);\n      const isArgObject = isObject(arg);\n\n      let nextCacheNode: CacheNode | undefined;\n\n      if (isArgObject) {\n        if (!currentCache.weakMap.has(arg)) {\n          const newCacheNode: CacheNode = {\n            map: new Map(),\n            weakMap: new WeakMap(),\n            parent: currentCache,\n            parentKey: arg,\n            childCount: 0,\n          };\n          currentCache.weakMap.set(arg, newCacheNode);\n          currentCache.childCount++;\n        }\n        nextCacheNode = currentCache.weakMap.get(arg);\n      } else {\n        if (!currentCache.map.has(arg)) {\n          const newCacheNode: CacheNode = {\n            map: new Map(),\n            weakMap: new WeakMap(),\n            parent: currentCache,\n            parentKey: arg,\n            childCount: 0,\n          };\n          currentCache.map.set(arg, newCacheNode);\n          currentCache.childCount++;\n        }\n        nextCacheNode = currentCache.map.get(arg);\n      }\n\n      currentCache = nextCacheNode!;\n    }\n\n    // After traversing all arguments, check if the result is cached\n    if ('result' in currentCache) {\n      // If using LRU Cache, update its usage\n      if (lruCache && currentCache.lruKey) {\n        lruCache.get(currentCache.lruKey); // This updates the recentness\n      }\n      return currentCache.result;\n    }\n\n    // Compute the result\n    const result = fn(...args);\n\n    // Cache the result\n    currentCache.result = result;\n\n    // If TTL is specified, set a timeout to evict the cache entry\n    if (ttl) {\n      currentCache.timeoutId = setTimeout(() => {\n        // Remove the result\n        delete currentCache.result;\n\n        // Remove from LRU if applicable\n        if (lruCache && currentCache.lruKey) {\n          lruCache.del(currentCache.lruKey);\n        }\n\n        // Recursively delete parent nodes if necessary\n        if (\n          currentCache.childCount === 0 &&\n          currentCache.parent &&\n          currentCache.parentKey !== undefined\n        ) {\n          recursivelyDeleteParent(currentCache);\n        }\n      }, ttl * 1000); // Convert seconds to milliseconds\n    }\n\n    // If LRU cache is enabled, manage the cache entries\n    if (lruCache && !currentCache.lruKey) {\n      const cacheEntryKey = Symbol();\n      currentCache.lruKey = cacheEntryKey; // Associate the cache node with the LRU key\n      lruCache.set(cacheEntryKey, currentCache);\n    }\n\n    return result;\n  } as T;\n}\n","import {weakMapMemoize} from './weakMapMemoize';\n\n/**\n * Creates a fast deterministic hash from a large JSON object iteratively\n * @param obj - The JSON object to hash (must not contain circular references)\n * @returns A deterministic hash string\n */\nexport const hashObject = weakMapMemoize((obj: any): string => {\n  // Using MurmurHash3\n  let h1: number = 0x12345678; // Seed\n\n  // Constants for MurmurHash3\n  const c1: number = 0xcc9e2d51;\n  const c2: number = 0x1b873593;\n\n  // Faster hash update function (based on MurmurHash3)\n  function hashChunk(str: string): void {\n    let k1: number;\n\n    // Process string in 4-byte chunks for speed\n    for (let i = 0; i < str.length; i += 4) {\n      // Pack up to 4 bytes into a 32-bit int\n      k1 = 0;\n      const remaining = Math.min(4, str.length - i);\n      for (let j = 0; j < remaining; j++) {\n        k1 |= str.charCodeAt(i + j) << (j * 8);\n      }\n\n      // MurmurHash3 algorithm\n      k1 *= c1;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 *= c2;\n\n      h1 ^= k1;\n      h1 = (h1 << 13) | (h1 >>> 19);\n      h1 = h1 * 5 + 0xe6546b64;\n    }\n  }\n\n  // Use a more efficient stack representation with fewer objects\n  // Each object creation is expensive, so we'll reuse objects where possible\n  const TYPE_PRIMITIVE = 0;\n  const TYPE_ARRAY = 1;\n  const TYPE_OBJECT = 2;\n\n  interface StackItem {\n    type: number; // 0=primitive, 1=array, 2=object\n    value: any; // The actual value\n    keys?: string[]; // Sorted keys for objects\n    index: number; // Current index in array/keys\n    state: number; // 0=start, 1=processing, 2=done\n  }\n\n  // Initial stack with just the root object\n  const stack: StackItem[] = [\n    {\n      type:\n        typeof obj === 'object' && obj !== null\n          ? Array.isArray(obj)\n            ? TYPE_ARRAY\n            : TYPE_OBJECT\n          : TYPE_PRIMITIVE,\n      value: obj,\n      index: 0,\n      state: 0,\n    },\n  ];\n\n  // Small string buffer to avoid creating too many strings\n  const smallBuffer = ['{', '}', '[', ']', ':', ',', 'null', 'true', 'false'] as const;\n\n  // Process the object iteratively\n  while (stack.length > 0) {\n    const current = stack[stack.length - 1]!;\n\n    // Start processing a new item\n    if (current.state === 0) {\n      current.state = 1;\n\n      // Process based on type\n      if (current.type === TYPE_PRIMITIVE) {\n        if (current.value === null) {\n          hashChunk(smallBuffer[6]); // 'null'\n        } else if (typeof current.value === 'boolean') {\n          hashChunk(current.value ? smallBuffer[7] : smallBuffer[8]); // 'true' or 'false'\n        } else if (typeof current.value === 'number') {\n          // Use a consistent string representation for numbers\n          hashChunk(current.value.toString());\n        } else if (typeof current.value === 'string') {\n          hashChunk(current.value);\n        }\n        current.state = 2; // Mark as done\n      } else if (current.type === TYPE_ARRAY) {\n        hashChunk(smallBuffer[2]); // '['\n\n        if (current.value.length === 0) {\n          hashChunk(smallBuffer[3]); // ']'\n          current.state = 2; // Mark as done\n        }\n      } else if (current.type === TYPE_OBJECT) {\n        hashChunk(smallBuffer[0]); // '{'\n\n        // Sort keys once and cache them\n        current.keys = Object.keys(current.value).sort();\n\n        if (current.keys.length === 0) {\n          hashChunk(smallBuffer[1]); // '}'\n          current.state = 2; // Mark as done\n        }\n      }\n    }\n    // Process array/object elements\n    else if (current.state === 1) {\n      if (current.type === TYPE_ARRAY) {\n        const arr = current.value;\n\n        if (current.index > 0) {\n          hashChunk(smallBuffer[5]); // ','\n        }\n\n        if (current.index < arr.length) {\n          const item = arr[current.index++];\n          const itemType =\n            item === null || typeof item !== 'object'\n              ? TYPE_PRIMITIVE\n              : Array.isArray(item)\n                ? TYPE_ARRAY\n                : TYPE_OBJECT;\n\n          // Push the item onto the stack\n          stack.push({\n            type: itemType,\n            value: item,\n            index: 0,\n            state: 0,\n          });\n        } else {\n          // Finished processing array\n          hashChunk(smallBuffer[3]); // ']'\n          current.state = 2;\n        }\n      } else if (current.type === TYPE_OBJECT) {\n        const keys = current.keys!;\n\n        if (current.index > 0) {\n          hashChunk(smallBuffer[5]); // ','\n        }\n\n        if (current.index < keys.length) {\n          const key = keys[current.index++]!;\n          hashChunk(key);\n          hashChunk(smallBuffer[4]); // ':'\n\n          const item = current.value[key];\n          const itemType =\n            item === null || typeof item !== 'object'\n              ? TYPE_PRIMITIVE\n              : Array.isArray(item)\n                ? TYPE_ARRAY\n                : TYPE_OBJECT;\n\n          // Push the item onto the stack\n          stack.push({\n            type: itemType,\n            value: item,\n            index: 0,\n            state: 0,\n          });\n        } else {\n          // Finished processing object\n          hashChunk(smallBuffer[1]); // '}'\n          current.state = 2;\n        }\n      }\n    }\n    // Finished with this item\n    else {\n      stack.pop();\n    }\n  }\n\n  // Finalize the hash (MurmurHash3 finalization)\n  h1 ^= h1 >>> 16;\n  h1 = (h1 * 0x85ebca6b) >>> 0;\n  h1 ^= h1 >>> 13;\n  h1 = (h1 * 0xc2b2ae35) >>> 0;\n  h1 ^= h1 >>> 16;\n\n  return h1.toString(16).padStart(8, '0');\n});\n","import debounce from 'lodash/debounce';\n\nimport {LRUCache} from './lru-cache';\n\ninterface CacheOptions {\n  dbName: string;\n  dbVersion?: number;\n  maxCount: number;\n}\n\nclass IDBError extends Error {\n  constructor(\n    message: string,\n    public originalError?: unknown,\n  ) {\n    super(message);\n    this.name = 'IDBError';\n  }\n}\n\n/**\n * A cache that uses IndexedDB to store and retrieve an in-memory LRUCache.\n */\nclass IDBLRUCache<T> {\n  private dbName: string;\n  private maxCount: number;\n  private dbPromise: Promise<IDBDatabase> | undefined;\n  private isDbOpen = false;\n  private lruCache: LRUCache<T>;\n  private dbVersion?: number;\n\n  constructor({dbName, dbVersion, maxCount}: CacheOptions) {\n    this.dbName = `idb-lru-cache-v1-${dbName}`;\n    this.maxCount = maxCount;\n    this.lruCache = new LRUCache<T>(maxCount);\n    this.dbPromise = this.initDB();\n    this.dbVersion = dbVersion;\n  }\n\n  private async initDB(): Promise<IDBDatabase> {\n    const request = indexedDB.open(this.dbName, this.dbVersion);\n\n    return new Promise((resolve, reject) => {\n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result;\n        if (!db.objectStoreNames.contains('cache')) {\n          db.createObjectStore('cache');\n        }\n      };\n      request.onsuccess = async (event) => {\n        const db = (event.target as IDBOpenDBRequest).result;\n        this.isDbOpen = true;\n\n        // Load the entire cache from IndexedDB\n        const tx = db.transaction('cache', 'readonly');\n        const store = tx.objectStore('cache');\n        const request = store.get('lru-cache');\n\n        await new Promise<void>((resolve, reject) => {\n          request.onsuccess = () => {\n            if (request.result) {\n              this.lruCache = LRUCache.fromJSON(request.result, this.maxCount);\n            }\n            resolve();\n          };\n          request.onerror = () => {\n            reject(new IDBError('Failed to load cache', request.error));\n          };\n        });\n\n        resolve(db);\n      };\n      request.onerror = (event) => {\n        this.isDbOpen = false;\n        reject(new IDBError('Failed to open database', (event.target as IDBOpenDBRequest).error));\n      };\n      request.onblocked = () => {\n        this.isDbOpen = false;\n        reject(new IDBError('Database is blocked'));\n      };\n    });\n  }\n\n  private async withDB<T>(operation: (db: IDBDatabase) => Promise<T>): Promise<T> {\n    try {\n      if (!this.dbPromise) {\n        this.dbPromise = this.initDB();\n      }\n      const db = await this.dbPromise;\n      if (!this.isDbOpen) {\n        throw new IDBError('Database is not open', this.dbName);\n      }\n      return await operation(db);\n    } catch (error) {\n      if (error instanceof IDBError) {\n        throw error;\n      }\n      throw new IDBError('Database operation failed', error);\n    }\n  }\n\n  private syncToDB = debounce(async (): Promise<void> => {\n    return this.withDB(async (db) => {\n      const transaction = db.transaction('cache', 'readwrite');\n      const store = transaction.objectStore('cache');\n\n      await new Promise((resolve, reject) => {\n        const putRequest = store.put(this.lruCache.toJSON(), 'lru-cache');\n        putRequest.onsuccess = () => resolve(void 0);\n        putRequest.onerror = () => reject(new IDBError('Failed to sync cache', putRequest.error));\n      });\n    });\n  }, 1000);\n\n  async set(key: string, value: T): Promise<void> {\n    return this.withDB(async () => {\n      this.lruCache.put(key, value);\n      this.syncToDB();\n    });\n  }\n\n  async get(key: string): Promise<{value: T} | undefined> {\n    return this.withDB(async () => {\n      const value = this.lruCache.get(key);\n      return value !== undefined ? {value} : undefined;\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.withDB(async () => {\n      return this.lruCache.get(key) !== undefined;\n    });\n  }\n\n  async delete(key: string): Promise<void> {\n    return this.withDB(async () => {\n      this.lruCache.put(key, undefined as any); // Using put to trigger LRU eviction\n      this.syncToDB();\n    });\n  }\n\n  async clear(): Promise<void> {\n    return this.withDB(async () => {\n      this.lruCache = new LRUCache<T>(this.maxCount);\n      this.syncToDB();\n    });\n  }\n\n  async close(): Promise<void> {\n    await this.syncToDB.flush();\n    await this.withDB(async (db) => {\n      this.isDbOpen = false;\n      delete this.dbPromise;\n      db.close();\n    });\n  }\n}\n\nexport function cache<T>(options: CacheOptions): IDBLRUCache<T> {\n  return new IDBLRUCache<T>(options);\n}\n","import memoize from 'lodash/memoize';\nimport LRU from 'lru-cache';\n\nimport {timeByParts} from './timeByParts';\nimport {hashObject} from '../util/hashObject';\nimport {cache} from '../util/idb-lru-cache';\nimport {weakMapMemoize} from '../util/weakMapMemoize';\n\nfunction twoDigit(v: number) {\n  return `${v < 10 ? '0' : ''}${v}`;\n}\n\nfunction indexesOf(string: string, search: RegExp | string) {\n  const indexes: number[] = [];\n  const regexp = new RegExp(search, 'g');\n  let match = null;\n  while ((match = regexp.exec(string))) {\n    indexes.push(match.index);\n  }\n  return indexes;\n}\n\nexport const withMiddleTruncation = (text: string, options: {maxLength: number}) => {\n  const overflowLength = text.length - options.maxLength;\n  if (overflowLength <= 0) {\n    // No truncation is necessary\n    return text;\n  }\n  if (options.maxLength <= 10) {\n    // Middle truncation to this few characters (eg: abc…ef) is kind of silly\n    // and just using abcde… looks better.\n    return text.substring(0, options.maxLength - 1) + '…';\n  }\n\n  // Find all the breakpoints in the string\n  //   \"my_great_long_solid_name\"\n  //     ˄     ˄    ˄     ˄\n  const breakpoints = text.includes('__') ? indexesOf(text, /__/g) : indexesOf(text, /[_>\\.-]/g);\n\n  // Given no breakpoints, slice out the middle of the string. Adding\n  // the overflowLength here gives us the END point of the truncated region.\n  //\n  //   \"abc(defg)hijk\"\n  //            ˄\n  let breakpoint = Math.floor((text.length + overflowLength) / 2);\n\n  // Find the first breakpoint that exists AFTER enough characters that we could show\n  // at least three prefix letters after cutting out overflowLength.\n  const firstUsableIdx = breakpoints.findIndex((bp) => bp > overflowLength + 3);\n\n  if (firstUsableIdx !== -1) {\n    // If we found a usable breakpoint, see if we could instead choose the middle\n    // breakpoint which would give us more prefix. All else equal,\n    // \"my_great_l…_name\" looks better than \"my_g…_solid_name\"\n    const middleIdx = Math.floor(breakpoints.length / 2);\n    const breakpointAtIndex = breakpoints[Math.max(firstUsableIdx, middleIdx)];\n    if (breakpointAtIndex !== undefined) {\n      breakpoint = breakpointAtIndex;\n    }\n  }\n\n  const result = [\n    text.substring(0, breakpoint - (overflowLength + 1)),\n    text.substring(breakpoint),\n  ].join('…');\n\n  return result;\n};\n\nconst msecFormatter = memoize((locale: string) => {\n  return new Intl.NumberFormat(locale, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  });\n});\n\n/**\n * Return an i18n-formatted millisecond in seconds as a decimal, with no leading zero.\n */\nconst formatMsecMantissa = (msec: number) =>\n  msecFormatter(navigator.language)\n    .format(msec / 1000)\n    .slice(-4);\n\n/**\n * Format the time without milliseconds, rounding to :01 for non-zero value within (-1, 1)\n */\nexport const formatElapsedTimeWithoutMsec = (msec: number) => {\n  const {hours, minutes, seconds} = timeByParts(msec);\n  const negative = msec < 0;\n  const roundedSeconds = msec !== 0 && msec < 1000 && msec > -1000 ? 1 : seconds;\n  return `${negative ? '-' : ''}${hours}:${twoDigit(minutes)}:${twoDigit(roundedSeconds)}`;\n};\n\nexport const formatElapsedTimeWithMsec = (msec: number) => {\n  const {hours, minutes, seconds, milliseconds} = timeByParts(msec);\n\n  const negative = msec < 0;\n  const sign = negative ? '-' : '';\n  const hourStr = hours > 0 ? `${hours}:` : '';\n  const minuteStr = hours > 0 ? `${twoDigit(minutes)}:` : minutes > 0 ? `${minutes}:` : '';\n  const secStr = hours > 0 || minutes > 0 ? `${twoDigit(seconds)}` : `${seconds}`;\n  const mantissa = formatMsecMantissa(milliseconds);\n\n  return `${sign}${hourStr}${minuteStr}${secStr}${mantissa}`;\n};\n\nexport function breakOnUnderscores(str: string) {\n  return str.replace(/_/g, '_\\u200b');\n}\n\nexport function patchCopyToRemoveZeroWidthUnderscores() {\n  document.addEventListener('copy', (event) => {\n    if (!event.clipboardData) {\n      // afaik this is always defined, but the TS field is optional\n      return;\n    }\n\n    // Note: This returns the text of the current selection if DOM\n    // nodes are selected. If the selection on the page is text within\n    // codemirror or an input or textarea, this returns \"\" and we fall\n    // through to the default pasteboard content.\n    const text = (window.getSelection() || '').toString().replace(/_\\u200b/g, '_');\n\n    if (text.length) {\n      event.preventDefault();\n      event.clipboardData.setData('Text', text);\n    }\n  });\n}\n\nexport function asyncMemoize<T, R, U extends (arg: T, ...rest: any[]) => PromiseLike<R>>(\n  fn: U,\n  hashFn?: (arg: T, ...rest: any[]) => any,\n  hashSize?: number,\n): U {\n  const cache = new LRU<any, R>(hashSize || 50);\n  return (async (arg: T, ...rest: any[]) => {\n    const key = hashFn ? hashFn(arg, ...rest) : arg;\n    if (cache.has(key)) {\n      return Promise.resolve(cache.get(key) as R);\n    }\n    const r = (await fn(arg, ...rest)) as R;\n    cache.set(key, r);\n    return r;\n  }) as any;\n}\n\nexport const indexedDBAsyncMemoize = <R, U extends (...args: any[]) => Promise<R>>(\n  fn: U,\n  key: string,\n  hashFn?: (...args: Parameters<U>) => any,\n): U & {\n  isCached: (...args: Parameters<U>) => Promise<boolean>;\n  clearEntry: (...args: Parameters<U>) => Promise<void>;\n} => {\n  let lru: ReturnType<typeof cache<R>> | undefined;\n  try {\n    lru = cache<R>({\n      dbName: `indexDBAsyncMemoizeDB${key}`,\n      maxCount: 50,\n    });\n  } catch {}\n\n  const hashToPromise: Record<string, Promise<R>> = {};\n\n  const genHashKey = weakMapMemoize(async (...args: Parameters<U>) => {\n    return hashFn ? hashFn(...args) : hashObject(args);\n  });\n\n  const ret = weakMapMemoize(async (...args: Parameters<U>) => {\n    return new Promise<R>(async (resolve, reject) => {\n      const hashKey = await genHashKey(...args);\n      if (lru && (await lru.has(hashKey))) {\n        const entry = await lru.get(hashKey);\n        const value = entry?.value;\n        if (value) {\n          resolve(value);\n        } else {\n          reject(new Error('No value found'));\n        }\n        return;\n      } else if (!hashToPromise[hashKey]) {\n        hashToPromise[hashKey] = new Promise(async (res, rej) => {\n          try {\n            const result = await fn(...args);\n            // Resolve the promise before storing the result in IndexedDB\n            res(result);\n            if (lru) {\n              await lru.set(hashKey, result);\n              delete hashToPromise[hashKey];\n            }\n          } catch (e) {\n            delete hashToPromise[hashKey];\n            rej(e);\n          }\n        });\n      }\n      try {\n        const result = await hashToPromise[hashKey]!;\n        resolve(result);\n      } catch (e) {\n        delete hashToPromise[hashKey];\n        reject(e);\n      }\n    });\n  }) as any;\n  ret.isCached = async (...args: Parameters<U>) => {\n    const hashKey = await genHashKey(...args);\n    if (!lru) {\n      return false;\n    }\n    return await lru.has(hashKey);\n  };\n  ret.clearEntry = async (...args: Parameters<U>) => {\n    if (!lru) {\n      return;\n    }\n    const hashKey = await genHashKey(...args);\n    delete hashToPromise[hashKey];\n    await lru.delete(hashKey);\n  };\n  return ret;\n};\n\nexport function assertUnreachable(value: never): never {\n  throw new Error(`Didn't expect to get here with value: ${JSON.stringify(value)}`);\n}\n\nexport function colorHash(str: string) {\n  let seed = 0;\n  for (let i = 0; i < str.length; i++) {\n    seed = ((seed << 5) - seed + str.charCodeAt(i)) | 0;\n  }\n\n  const random255 = (x: number) => {\n    const value = Math.sin(x) * 10000;\n    return 255 * (value - Math.floor(value));\n  };\n\n  return `rgb(${random255(seed++)}, ${random255(seed++)}, ${random255(seed++)})`;\n}\n\n// Useful for generating predicates to retain type information when\n// find/filtering GraphQL results. Example:\n//\n// const textMetadata = metadataEntries.filter(gqlTypePredicate('TextMetadataEntry'));\n//\n// `textMetadata` will be of type `TextMetadataEntry[]`.\nexport const gqlTypePredicate =\n  <T extends string>(typename: T) =>\n  <N extends {__typename: string}>(node: N): node is Extract<N, {__typename: T}> => {\n    return node.__typename === typename;\n  };\n\nexport const COMMON_COLLATOR = new Intl.Collator(navigator.language, {sensitivity: 'base'});\n","import {pathHorizontalDiagonal, pathVerticalDiagonal} from '@vx/shape';\nimport memoize from 'lodash/memoize';\n\nimport {AssetNodeKeyFragment} from './types/AssetNode.types';\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {\n  AssetCheckLiveFragment,\n  AssetLatestInfoFragment,\n  AssetLatestInfoRunFragment,\n  AssetNodeLiveFragment,\n  AssetNodeLiveFreshnessInfoFragment,\n  AssetNodeLiveMaterializationFragment,\n  AssetNodeLiveObservationFragment,\n} from '../asset-data/types/AssetBaseDataProvider.types';\nimport {AssetStaleDataFragment} from '../asset-data/types/AssetStaleStatusDataProvider.types';\nimport {RunStatus} from '../graphql/types';\nimport {WorkspaceAssetFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\n\nexport enum AssetGraphViewType {\n  GLOBAL = 'global',\n  JOB = 'job',\n  GROUP = 'group',\n  CATALOG = 'catalog',\n}\n\n/**\n * IMPORTANT: This file is used by the WebWorker so make sure we don't indirectly import React or anything that relies on window/document\n */\n\n/**\n * IMPORTANT: This file is used by the WebWorker so make sure we don't indirectly import React or anything that relies on window/document\n */\n\ntype AssetNode = WorkspaceAssetFragment;\ntype AssetKey = AssetNodeKeyFragment;\ntype AssetLiveNode = AssetNodeLiveFragment & {\n  freshnessInfo: AssetNodeLiveFreshnessInfoFragment | null | undefined;\n};\ntype AssetLatestInfo = AssetLatestInfoFragment;\n\nexport const __ASSET_JOB_PREFIX = '__ASSET_JOB';\nexport const __ANONYMOUS_ASSET_JOB_PREFIX = '__anonymous_asset_job';\n\nexport function isHiddenAssetGroupJob(jobName: string) {\n  return jobName.startsWith(__ASSET_JOB_PREFIX) || jobName.startsWith(__ANONYMOUS_ASSET_JOB_PREFIX);\n}\n\n// IMPORTANT: We use this, rather than AssetNode.id throughout this file because\n// the GraphQL interface exposes dependencyKeys, not dependencyIds. We also need\n// ways to \"build\" GraphId's locally, they can't always be server-provided.\n//\n// This value is NOT the same as AssetNode.id values provided by the server,\n// because JSON.stringify's whitespace behavior is different than Python's.\n//\nexport type GraphId = string;\nexport const toGraphId = (key: {path: string[]}): GraphId => JSON.stringify(key.path);\nexport const fromGraphId = (graphId: GraphId): AssetNodeKeyFragment => ({\n  path: JSON.parse(graphId),\n  __typename: 'AssetKey',\n});\n\nexport interface GraphNode {\n  id: GraphId;\n  assetKey: AssetKey;\n  definition: AssetNode;\n}\n\nexport interface GraphData {\n  nodes: {[assetId: GraphId]: GraphNode};\n  downstream: {[assetId: GraphId]: {[childAssetId: GraphId]: boolean}};\n  upstream: {[assetId: GraphId]: {[parentAssetId: GraphId]: boolean}};\n  expandedGroups?: string[];\n}\n\nexport const buildGraphData = (assetNodes: AssetNode[]) => {\n  const data: GraphData = {\n    nodes: {},\n    downstream: {},\n    upstream: {},\n  };\n\n  const addEdge = (upstreamGraphId: string, downstreamGraphId: string) => {\n    if (upstreamGraphId === downstreamGraphId) {\n      // Skip add edges for self-dependencies (eg: assets relying on older partitions of themselves)\n      return;\n    }\n    data.downstream[upstreamGraphId] = {\n      ...(data.downstream[upstreamGraphId] || {}),\n      [downstreamGraphId]: true,\n    };\n    data.upstream[downstreamGraphId] = {\n      ...(data.upstream[downstreamGraphId] || {}),\n      [upstreamGraphId]: true,\n    };\n  };\n\n  assetNodes.forEach((definition: AssetNode) => {\n    const id = toGraphId(definition.assetKey);\n    definition.dependencyKeys.forEach((key) => {\n      addEdge(toGraphId(key), id);\n    });\n    definition.dependedByKeys.forEach((key) => {\n      addEdge(id, toGraphId(key));\n    });\n\n    data.nodes[id] = {\n      id,\n      assetKey: definition.assetKey,\n      definition,\n    };\n  });\n\n  return data;\n};\n\nexport const nodeDependsOnSelf = (node: GraphNode) => {\n  const id = toGraphId(node.assetKey);\n  return node.definition.dependedByKeys.some((d) => toGraphId(d) === id);\n};\n\nexport const graphHasCycles = (graphData: GraphData) => {\n  const nodes = new Set(Object.keys(graphData.nodes));\n  const search = (stack: string[], node: string): boolean => {\n    if (stack.indexOf(node) !== -1) {\n      return true;\n    }\n    if (nodes.delete(node) === true) {\n      const nextStack = stack.concat(node);\n      return Object.keys(graphData.downstream[node] || {}).some((nextNode) =>\n        search(nextStack, nextNode),\n      );\n    }\n    return false;\n  };\n  let hasCycles = false;\n  while (nodes.size !== 0 && !hasCycles) {\n    hasCycles = search([], nodes.values().next().value!);\n  }\n  return hasCycles;\n};\n\nexport const buildSVGPathHorizontal = pathHorizontalDiagonal({\n  source: (s: any) => s.source,\n  target: (s: any) => s.target,\n  x: (s: any) => s.x,\n  y: (s: any) => s.y,\n});\nexport const buildSVGPathVertical = pathVerticalDiagonal({\n  source: (s: any) => s.source,\n  target: (s: any) => s.target,\n  x: (s: any) => s.x,\n  y: (s: any) => s.y,\n});\n\nexport interface LiveDataForNode {\n  stepKey: string;\n  unstartedRunIds: string[]; // run in progress and step not started\n  inProgressRunIds: string[]; // run in progress and step in progress\n  runWhichFailedToMaterialize: AssetLatestInfoRunFragment | null;\n  lastMaterialization: AssetNodeLiveMaterializationFragment | null;\n  lastMaterializationRunStatus: RunStatus | null; // only available if runWhichFailedToMaterialize is null\n  freshnessInfo: AssetNodeLiveFreshnessInfoFragment | null | undefined;\n  lastObservation: AssetNodeLiveObservationFragment | null;\n  assetChecks: AssetCheckLiveFragment[];\n  partitionStats: {\n    numMaterialized: number;\n    numMaterializing: number;\n    numPartitions: number;\n    numFailed: number;\n  } | null;\n  opNames: string[];\n}\n\nexport type LiveDataForNodeWithStaleData = LiveDataForNode & {\n  staleStatus: AssetStaleDataFragment['staleStatus'];\n  staleCauses: AssetStaleDataFragment['staleCauses'];\n};\n\nexport const MISSING_LIVE_DATA: LiveDataForNodeWithStaleData = {\n  unstartedRunIds: [],\n  inProgressRunIds: [],\n  runWhichFailedToMaterialize: null,\n  freshnessInfo: null,\n  lastMaterialization: null,\n  lastMaterializationRunStatus: null,\n  lastObservation: null,\n  partitionStats: null,\n  staleStatus: null,\n  staleCauses: [],\n  assetChecks: [],\n  opNames: [],\n  stepKey: '',\n};\n\nexport interface LiveData {\n  [assetId: GraphId]: LiveDataForNode;\n}\n\nexport const buildLiveDataForNode = (\n  assetNode: AssetLiveNode,\n  assetLatestInfo?: AssetLatestInfo,\n): LiveDataForNode => {\n  const lastMaterialization = assetNode.assetMaterializations[0] || null;\n  const lastObservation = assetNode.assetObservations[0] || null;\n  const latestRun = assetLatestInfo?.latestRun ? assetLatestInfo.latestRun : null;\n\n  return {\n    lastMaterialization,\n    lastMaterializationRunStatus:\n      latestRun && lastMaterialization?.runId === latestRun.id ? latestRun.status : null,\n    lastObservation,\n    assetChecks:\n      assetNode.assetChecksOrError.__typename === 'AssetChecks'\n        ? assetNode.assetChecksOrError.checks\n        : [],\n    stepKey: stepKeyForAsset(assetNode),\n    freshnessInfo: assetNode.freshnessInfo,\n    inProgressRunIds: assetLatestInfo?.inProgressRunIds || [],\n    unstartedRunIds: assetLatestInfo?.unstartedRunIds || [],\n    partitionStats: assetNode.partitionStats || null,\n    runWhichFailedToMaterialize:\n      latestRun && shouldDisplayRunFailure(latestRun, lastMaterialization) ? latestRun : null,\n    opNames: assetNode.opNames,\n  };\n};\n\nexport function shouldDisplayRunFailure(\n  latestRun: AssetLatestInfoRunFragment,\n  lastMaterialization: AssetNodeLiveMaterializationFragment | null,\n) {\n  if (latestRun.status !== 'FAILURE') {\n    return false; // The run did not fail\n  }\n  if (lastMaterialization) {\n    if (lastMaterialization && lastMaterialization.runId === latestRun.id) {\n      // The run failed, but it successfully emitted the latest materialization event. This\n      // is caused by the run failing in a later step.\n      return false;\n    }\n    if (Number(lastMaterialization.timestamp) > Number(latestRun.endTime) * 1000) {\n      // The latest materialization is NEWER than the latest run. This is caused by the user\n      // reporting a materialization manually.\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function tokenForAssetKey(key: {path: string[]}) {\n  return key.path.join('/');\n}\n\nexport function tokenToAssetKey(token: string) {\n  return {path: token.split('/')};\n}\n\nexport function displayNameForAssetKey(key: {path: string[]}) {\n  return key.path.join(' / ');\n}\n\nexport function sortAssetKeys(a: {path: string[]}, b: {path: string[]}) {\n  return COMMON_COLLATOR.compare(displayNameForAssetKey(a), displayNameForAssetKey(b));\n}\n\nexport function stepKeyForAsset(definition: {opNames: string[]}) {\n  // Used for linking to the run with this step highlighted. We only support highlighting\n  // a single step, so just use the first one.\n  const firstOp = definition.opNames.length ? definition.opNames[0] : null;\n  return firstOp || '';\n}\n\nexport const itemWithAssetKey = (key: {path: string[]}) => {\n  const token = tokenForAssetKey(key);\n  return (asset: {assetKey: {path: string[]}}) => tokenForAssetKey(asset.assetKey) === token;\n};\n\nexport const isGroupId = (str: string) => /^[^@:]+@[^@:]+:.+$/.test(str);\n\nexport const groupIdForNode = (node: GraphNode) =>\n  [\n    node.definition.repository.name,\n    '@',\n    node.definition.repository.location.name,\n    ':',\n    node.definition.groupName,\n  ].join('');\n\n// Inclusive\nexport const getUpstreamNodes = memoize(\n  (assetKey: AssetNodeKeyFragment, graphData: GraphData): AssetNodeKeyFragment[] => {\n    const upstream = Object.keys(graphData.upstream[toGraphId(assetKey)] || {});\n    const currentUpstream = upstream.map((graphId) => fromGraphId(graphId));\n    return [\n      assetKey,\n      ...currentUpstream,\n      ...currentUpstream.map((graphId) => getUpstreamNodes(graphId, graphData)).flat(),\n    ].filter(\n      (key, index, arr) =>\n        // Filter out non uniques\n        arr.findIndex((key2) => JSON.stringify(key2) === JSON.stringify(key)) === index,\n    );\n  },\n  (key, data) => JSON.stringify({key, data}),\n);\n","import * as dagre from 'dagre';\n\nimport {AssetNodeFacet} from './AssetNodeFacets';\nimport {GraphData, GraphId, GraphNode, groupIdForNode, isGroupId} from './Utils';\nimport type {IBounds, IPoint} from '../graph/common';\nimport {ChangeReason} from '../graphql/types';\n\nexport type AssetLayoutDirection = 'vertical' | 'horizontal';\n\nexport interface AssetLayout {\n  id: GraphId;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n}\n\nexport interface GroupLayout {\n  id: GraphId;\n  groupName: string;\n  repositoryName: string;\n  repositoryLocationName: string;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n  expanded: boolean;\n}\nexport type AssetLayoutEdge = {\n  from: IPoint;\n  fromId: string;\n  to: IPoint;\n  toId: string;\n};\n\nexport type AssetGraphLayout = {\n  width: number;\n  height: number;\n  edges: AssetLayoutEdge[];\n  nodes: {[id: string]: AssetLayout};\n  groups: {[name: string]: GroupLayout};\n};\nconst MARGIN = 100;\n\nexport type LayoutAssetGraphConfig = dagre.GraphLabel & {\n  direction: AssetLayoutDirection;\n  /** Pass `auto` to use getAssetNodeDimensions, or a value to give nodes a fixed height */\n  nodeHeight: number | 'auto';\n  /** Our asset groups have \"title bars\" - use these numbers to adjust the bounding boxes.\n   * Note that these adjustments are applied post-dagre layout. For padding > nodesep, you\n   * may need to set \"clusterpaddingtop\", \"clusterpaddingbottom\" so Dagre lays out the boxes\n   * with more spacing.\n   */\n  groupPaddingTop: number;\n  groupPaddingBottom: number;\n  groupRendering: 'if-varied' | 'always';\n\n  /** Supported in Dagre, just not documented. Additional spacing between group nodes */\n  clusterpaddingtop?: number;\n  clusterpaddingbottom?: number;\n  ranker?: 'tight-tree' | 'longest-path' | 'network-simplex';\n};\n\nexport type LayoutAssetGraphOptions = {\n  direction: AssetLayoutDirection;\n  overrides?: Partial<LayoutAssetGraphConfig>;\n  facets?: AssetNodeFacet[] | false;\n};\n\nexport const Config = {\n  horizontal: {\n    ranker: 'tight-tree',\n    direction: 'horizontal',\n    marginx: MARGIN,\n    marginy: MARGIN,\n    ranksep: 60,\n    rankdir: 'LR',\n    edgesep: 90,\n    nodesep: -10,\n    nodeHeight: 'auto' as 'auto' | number,\n    groupPaddingTop: 65,\n    groupPaddingBottom: -4,\n    groupRendering: 'if-varied',\n    clusterpaddingtop: 100,\n  },\n  vertical: {\n    ranker: 'tight-tree',\n    direction: 'horizontal',\n    marginx: MARGIN,\n    marginy: MARGIN,\n    ranksep: 20,\n    rankdir: 'TB',\n    nodesep: 40,\n    edgesep: 10,\n    nodeHeight: 'auto' as 'auto' | number,\n    groupPaddingTop: 55,\n    groupPaddingBottom: -4,\n    groupRendering: 'if-varied',\n  },\n};\n\nexport const layoutAssetGraph = (\n  graphData: GraphData,\n  opts: LayoutAssetGraphOptions,\n): AssetGraphLayout => {\n  try {\n    return layoutAssetGraphImpl(graphData, opts);\n  } catch {\n    try {\n      return layoutAssetGraphImpl(graphData, {\n        ...opts,\n        overrides: {\n          ranker: 'longest-path',\n        },\n      });\n    } catch {\n      return layoutAssetGraphImpl(graphData, {...opts, overrides: {ranker: 'network-simplex'}});\n    }\n  }\n};\n\nexport const layoutAssetGraphImpl = (\n  graphData: GraphData,\n  opts: LayoutAssetGraphOptions,\n): AssetGraphLayout => {\n  const g = new dagre.graphlib.Graph({compound: true});\n  const config = Object.assign({}, Config[opts.direction], opts.overrides || {});\n  const facets = opts.facets ? new Set<AssetNodeFacet>(opts.facets) : false;\n\n  g.setGraph(config);\n  g.setDefaultEdgeLabel(() => ({}));\n\n  // const shouldRender = (node?: GraphNode) => node && node.definition.opNames.length > 0;\n  const shouldRender = (node?: GraphNode) => node;\n  const renderedNodes = Object.values(graphData.nodes).filter(shouldRender);\n  const expandedGroups = graphData.expandedGroups || [];\n  const expandedGroupsSet = new Set(expandedGroups);\n\n  // Identify all the groups\n  const groups: {[id: string]: GroupLayout} = {};\n  for (const node of renderedNodes) {\n    if (node.definition.groupName) {\n      const id = groupIdForNode(node);\n      groups[id] = groups[id] || {\n        id,\n        expanded: expandedGroupsSet.has(id),\n        groupName: node.definition.groupName,\n        repositoryName: node.definition.repository.name,\n        repositoryLocationName: node.definition.repository.location.name,\n        bounds: {x: 0, y: 0, width: 0, height: 0},\n      };\n    }\n  }\n\n  // Add all the group boxes to the graph\n  const groupsPresent =\n    config.groupRendering === 'if-varied' ? Object.keys(groups).length > 1 : true;\n\n  if (groupsPresent) {\n    Object.keys(groups).forEach((groupId) => {\n      if (expandedGroupsSet.has(groupId)) {\n        // sized based on it's children, but \"border\" tells Dagre we want cluster-level\n        // spacing between the node and others. Necessary because our groups have title bars.\n        g.setNode(groupId, {borderType: 'borderRight'});\n      } else {\n        g.setNode(groupId, {width: ASSET_NODE_WIDTH, height: 110});\n      }\n    });\n  }\n\n  // Add all the nodes inside expanded groups to the graph\n  renderedNodes.forEach((node) => {\n    if (!groupsPresent || expandedGroupsSet.has(groupIdForNode(node))) {\n      const label =\n        config.nodeHeight === 'auto'\n          ? facets !== false\n            ? getAssetNodeDimensions2025(facets)\n            : getAssetNodeDimensions(node.definition)\n          : {width: ASSET_NODE_WIDTH, height: config.nodeHeight};\n\n      g.setNode(node.id, label);\n      if (groupsPresent && node.definition.groupName) {\n        g.setParent(node.id, groupIdForNode(node));\n      }\n    }\n  });\n\n  const linksToAssetsOutsideGraphedSet: {[id: string]: true} = {};\n  const groupIdForAssetId = Object.fromEntries(\n    Object.entries(graphData.nodes).map(([id, node]) => [id, groupIdForNode(node)]),\n  );\n\n  // Add the edges to the graph, and accumulate a set of \"foreign nodes\" (for which\n  // we have an inbound/outbound edge, but we don't have the `node` in the graphData).\n  Object.entries(graphData.downstream).forEach(([upstreamId, graphDataDownstream]) => {\n    const downstreamIds = Object.keys(graphDataDownstream);\n    downstreamIds.forEach((downstreamId) => {\n      if (\n        !shouldRender(graphData.nodes[downstreamId]) &&\n        !shouldRender(graphData.nodes[upstreamId])\n      ) {\n        return;\n      }\n      let v = upstreamId;\n      let w = downstreamId;\n\n      const wGroup = groupIdForAssetId[downstreamId];\n      if (groupsPresent && wGroup && !expandedGroupsSet.has(wGroup)) {\n        w = wGroup;\n      }\n      const vGroup = groupIdForAssetId[upstreamId];\n      if (groupsPresent && vGroup && !expandedGroupsSet.has(vGroup)) {\n        v = vGroup;\n      }\n      if (v === w) {\n        return;\n      }\n\n      g.setEdge({v, w}, {weight: 1});\n\n      if (!shouldRender(graphData.nodes[downstreamId])) {\n        linksToAssetsOutsideGraphedSet[downstreamId] = true;\n      } else if (!shouldRender(graphData.nodes[upstreamId])) {\n        linksToAssetsOutsideGraphedSet[upstreamId] = true;\n      }\n    });\n  });\n\n  // Add all the link nodes to the graph\n  Object.keys(linksToAssetsOutsideGraphedSet).forEach((id) => {\n    const path = JSON.parse(id);\n    const label = path[path.length - 1] || '';\n    g.setNode(id, getAssetLinkDimensions(label, opts));\n  });\n\n  dagre.layout(g);\n\n  let maxWidth = 1;\n  let maxHeight = 1;\n\n  const nodes: {[id: string]: AssetLayout} = {};\n\n  g.nodes().forEach((id) => {\n    const dagreNode = g.node(id);\n    if (!dagreNode?.x || !dagreNode?.width) {\n      return;\n    }\n    const bounds = {\n      x: dagreNode.x - dagreNode.width / 2,\n      y: dagreNode.y - dagreNode.height / 2,\n      width: dagreNode.width,\n      height: dagreNode.height,\n    };\n    if (!isGroupId(id)) {\n      nodes[id] = {id, bounds};\n    } else if (!expandedGroupsSet.has(id)) {\n      const group = groups[id]!;\n      group.bounds = bounds;\n    }\n\n    maxWidth = Math.max(maxWidth, dagreNode.x + dagreNode.width / 2);\n    maxHeight = Math.max(maxHeight, dagreNode.y + dagreNode.height / 2);\n  });\n\n  // Apply bounds to the groups based on the nodes inside them\n  if (groupsPresent) {\n    for (const node of renderedNodes) {\n      const nodeLayout = nodes[node.id];\n      if (nodeLayout && node.definition.groupName) {\n        const groupId = groupIdForNode(node);\n        const group = groups[groupId]!;\n        group.bounds =\n          group.bounds.width === 0\n            ? nodeLayout.bounds\n            : extendBounds(group.bounds, nodeLayout.bounds);\n      }\n    }\n    for (const group of Object.values(groups)) {\n      if (group.expanded) {\n        group.bounds = padBounds(group.bounds, {\n          x: 15,\n          top: config.groupPaddingTop,\n          bottom: config.groupPaddingBottom,\n        });\n      }\n    }\n  }\n\n  const edges: AssetLayoutEdge[] = [];\n\n  g.edges().forEach((e) => {\n    const v = g.node(e.v);\n    const w = g.node(e.w);\n    if (!v || !w) {\n      return;\n    }\n    const vXInset = !!linksToAssetsOutsideGraphedSet[e.v] ? 16 : 24;\n    const wXInset = !!linksToAssetsOutsideGraphedSet[e.w] ? 16 : 24;\n\n    // Ignore the coordinates from dagre and use the top left + bottom left of the\n    edges.push(\n      opts.direction === 'horizontal'\n        ? {\n            from: {x: v.x + v.width / 2, y: v.y},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 - 5, y: w.y},\n            toId: e.w,\n          }\n        : {\n            from: {x: v.x - v.width / 2 + vXInset, y: v.y - 30 + v.height / 2},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 + wXInset, y: w.y + 20 - w.height / 2},\n            toId: e.w,\n          },\n    );\n  });\n\n  return {\n    nodes,\n    edges,\n    width: maxWidth + MARGIN,\n    height: maxHeight + MARGIN,\n    groups: groupsPresent ? groups : {},\n  };\n};\n\nexport const ASSET_LINK_NAME_MAX_LENGTH = 30;\n\nexport const getAssetLinkDimensions = (label: string, opts: LayoutAssetGraphOptions) => {\n  return opts.direction === 'horizontal'\n    ? {width: 32 + 7.1 * Math.min(ASSET_LINK_NAME_MAX_LENGTH, label.length), height: 50}\n    : {width: 106, height: 50};\n};\n\nexport const padBounds = (a: IBounds, padding: {x: number; top: number; bottom: number}) => {\n  return {\n    x: a.x - padding.x,\n    y: a.y - padding.top,\n    width: a.width + padding.x * 2,\n    height: a.height + padding.top + padding.bottom,\n  };\n};\n\nexport const extendBounds = (a: IBounds, b: IBounds) => {\n  const xmin = Math.min(a.x, b.x);\n  const ymin = Math.min(a.y, b.y);\n  const xmax = Math.max(a.x + a.width, b.x + b.width);\n  const ymax = Math.max(a.y + a.height, b.y + b.height);\n  return {x: xmin, y: ymin, width: xmax - xmin, height: ymax - ymin};\n};\n\nexport const ASSET_NODE_WIDTH = 320;\nexport const ASSET_NODE_TAGS_HEIGHT = 28;\nexport const ASSET_NODE_STATUS_ROW_HEIGHT = 25;\n\nexport const ASSET_NODE_NAME_MAX_LENGTH = 31;\n\nexport const getAssetNodeDimensions = (def: {\n  assetKey: {path: string[]};\n  opNames: string[];\n  isMaterializable: boolean;\n  isObservable: boolean;\n  isPartitioned: boolean;\n  graphName: string | null;\n  description?: string | null;\n  computeKind: string | null;\n  changedReasons?: ChangeReason[];\n}) => {\n  let height = 0;\n\n  height += ASSET_NODE_TAGS_HEIGHT; // top tags\n\n  height += 76; // box padding + border + name + description\n\n  if (def.isPartitioned && def.isMaterializable) {\n    height += ASSET_NODE_STATUS_ROW_HEIGHT;\n  }\n\n  height += ASSET_NODE_STATUS_ROW_HEIGHT; // status row\n  height += ASSET_NODE_STATUS_ROW_HEIGHT; // checks row\n  height += ASSET_NODE_TAGS_HEIGHT; // bottom tags\n\n  return {width: ASSET_NODE_WIDTH, height};\n};\n\nexport const getAssetNodeDimensions2025 = (facets: Set<AssetNodeFacet>) => {\n  let height = 0;\n\n  if (facets.size === 0) {\n    height = 60;\n  } else {\n    height = 50; // box padding + border + name\n    height += ASSET_NODE_STATUS_ROW_HEIGHT * facets.size;\n  }\n\n  return {width: ASSET_NODE_WIDTH, height};\n};\n","export const DEFAULT_RESULT_NAME = 'result';\n\nexport const titleOfIO = (i: {solid: {name: string}; definition: {name: string}}) => {\n  return i.solid.name !== DEFAULT_RESULT_NAME\n    ? `${i.solid.name}:${i.definition.name}`\n    : i.solid.name;\n};\n","import * as dagre from 'dagre';\n\nimport type {IBounds, IPoint} from './common';\nimport {titleOfIO} from '../app/titleOfIO';\n\nexport type OpLayoutEdgeSide = {\n  point: IPoint;\n  opName: string;\n  edgeName: string;\n};\n\nexport type OpLayoutEdge = {\n  from: OpLayoutEdgeSide;\n  to: OpLayoutEdgeSide;\n};\n\nexport interface OpLayout {\n  // Overall frame of the box relative to 0,0 on the graph\n  bounds: IBounds;\n\n  // Frames of specific components - These need to be computed during layout\n  // (rather than at render time) to position edges into inputs/outputs.\n  op: IBounds;\n  inputs: {[inputName: string]: OpLayoutIO};\n  outputs: {[outputName: string]: OpLayoutIO};\n}\n\nexport interface OpLayoutIO {\n  layout: IBounds;\n  label: boolean;\n  collapsed: string[];\n  port: IPoint;\n}\n\nexport type OpGraphLayout = {\n  width: number;\n  height: number;\n  parent: ParentOpLayout | null;\n  edges: OpLayoutEdge[];\n  nodes: {[opName: string]: OpLayout};\n};\n\ninterface ParentOpLayout extends Omit<OpLayout, 'op'> {\n  mappingLeftEdge: number;\n  mappingLeftSpacing: number;\n  dependsOn: {[opName: string]: IPoint};\n  dependedBy: {[opName: string]: IPoint};\n  invocationBoundingBox: IBounds;\n}\n\nexport interface ILayoutOp {\n  name: string;\n  inputs: {\n    definition: {\n      name: string;\n    };\n    dependsOn: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  definition: {\n    description: string | null;\n    assetNodes: {\n      assetKey: {\n        path: string[];\n      };\n    }[];\n  };\n  outputs: {\n    definition: {\n      name: string;\n    };\n    dependedBy: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\nconst OP_WIDTH = 370;\nconst OP_BASE_HEIGHT = 52;\nconst OP_ASSETS_ROW_HEIGHT = 22;\nconst IO_HEIGHT = 26;\nconst IO_INSET = 0;\nconst IO_MINI_WIDTH = 35;\nconst IO_THRESHOLD_FOR_MINI = 4;\nconst PORT_INSET_X = 13;\nconst PORT_INSET_Y = IO_HEIGHT / 2;\nconst PARENT_DEFINITION_PADDING = 70;\nconst PARENT_INVOCATION_PADDING = 70;\nconst EXTERNAL_DEPENDENCY_PADDING = 50;\n\nconst MARGIN_BASE = 100;\n\ntype OpLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nfunction flattenIO(arrays: OpLinkInfo[][]) {\n  const map: {[key: string]: OpLinkInfo} = {};\n  arrays.forEach((array) => array.forEach((item) => (map[titleOfIO(item)] = item)));\n  return Object.values(map);\n}\n\nexport type LayoutOpGraphOptions = {\n  parentOp?: ILayoutOp;\n};\n\nexport function layoutOpGraph(pipelineOps: ILayoutOp[], opts: LayoutOpGraphOptions): OpGraphLayout {\n  const g = new dagre.graphlib.Graph();\n\n  // First, identify how much space we need to pad the DAG by in order to show the\n  // parent op AROUND it. We pass this padding in to dagre, and then we have enough\n  // room to add our parent layout around the result.\n  let parentIOPadding = 0;\n  let marginy = MARGIN_BASE;\n  let marginx = MARGIN_BASE;\n  if (opts.parentOp) {\n    parentIOPadding =\n      Math.max(opts.parentOp.inputs.length, opts.parentOp.outputs.length) * IO_HEIGHT;\n    marginx = PARENT_DEFINITION_PADDING + PARENT_INVOCATION_PADDING;\n    marginy = marginx + parentIOPadding;\n  }\n\n  // Define a new top-down, left to right graph layout\n  g.setGraph({rankdir: 'TB', marginx, marginy, ranker: 'tight-tree'});\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const edges: OpLayoutEdge[] = [];\n  const opNamesPresent: {[name: string]: boolean} = {};\n\n  pipelineOps.forEach((op) => {\n    opNamesPresent[op.name] = true;\n  });\n  pipelineOps.forEach((op) => {\n    // Lay out each op individually to get it's width and height based on it's\n    // inputs and outputs, and then attach it to the graph. Dagre will give us it's\n    // x,y position.\n    const layout = layoutOp(op, {x: 0, y: 0});\n    g.setNode(op.name, {\n      width: layout.bounds.width,\n      height: layout.bounds.height,\n    });\n\n    // Give Dagre the dependency edges and build a flat set of them so we\n    // can reference them in a single pass later\n    op.inputs.forEach((input) => {\n      input.dependsOn.forEach((dep) => {\n        if (opNamesPresent[dep.solid.name] && opNamesPresent[op.name]) {\n          g.setEdge({v: dep.solid.name, w: op.name}, {weight: 1});\n\n          edges.push({\n            from: {\n              point: {x: 0, y: 0},\n              opName: dep.solid.name,\n              edgeName: dep.definition.name,\n            },\n            to: {\n              point: {x: 0, y: 0},\n              opName: op.name,\n              edgeName: input.definition.name,\n            },\n          });\n        }\n      });\n    });\n  });\n\n  dagre.layout(g);\n\n  const ops: {[opName: string]: OpLayout} = {};\n  const dagreNodes: {[opName: string]: dagre.Node} = {};\n  g.nodes().forEach(function (opName) {\n    const node = g.node(opName);\n    if (!node) {\n      return;\n    }\n    dagreNodes[opName] = node;\n  });\n\n  // Due to a bug in Dagre when run without an \"align\" value, we need to calculate\n  // the total width of the graph coordinate space ourselves. We need the height\n  // because we've shifted long single rows into multiple rows.\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  // Read the Dagre layout and map \"nodes\" back to our solids, but with\n  // X,Y coordinates this time.\n  Object.entries(dagreNodes).forEach(([opName, node]) => {\n    const op = pipelineOps.find(({name}) => name === opName);\n    if (!op) {\n      return;\n    }\n\n    const x = node.x - node.width / 2; // Dagre's x/y is the center, we want top left\n    const y = node.y - node.height / 2;\n    ops[opName] = layoutOp(op, {x, y});\n    maxWidth = Math.max(maxWidth, x + node.width);\n    maxHeight = Math.max(maxHeight, y + node.height);\n  });\n\n  // Read the Dagre layout and map \"edges\" back to our data model. We don't\n  // currently use the \"closest points on the node\" Dagre suggests (but we could).\n  g.edges().forEach(function (e) {\n    const conn = edges.find((c) => c.from.opName === e.v && c.to.opName === e.w);\n    const points = g.edge(e).points;\n    if (conn && points.length > 0) {\n      conn.from.point = points[0]!;\n      conn.to.point = points[points.length - 1]!;\n    }\n  });\n\n  const result: OpGraphLayout = {\n    edges,\n    nodes: ops,\n    width: maxWidth + marginx,\n    height: maxHeight + marginy,\n    parent: null,\n  };\n\n  if (opts.parentOp) {\n    // Now that we've computed the pipeline layout fully, lay out the\n    // composite op around the completed DAG.\n    result.parent = layoutParentGraphOp(result, opts.parentOp, parentIOPadding);\n  }\n\n  return result;\n}\n\nfunction layoutParentGraphOp(layout: OpGraphLayout, op: ILayoutOp, parentIOPadding: number) {\n  const result: ParentOpLayout = {\n    invocationBoundingBox: {\n      x: 1,\n      y: 1,\n      width: layout.width - 1,\n      height: layout.height - 1,\n    },\n    bounds: {\n      x: PARENT_INVOCATION_PADDING,\n      y: PARENT_INVOCATION_PADDING + parentIOPadding,\n      width: layout.width - PARENT_INVOCATION_PADDING * 2,\n      height: layout.height - (PARENT_INVOCATION_PADDING + parentIOPadding) * 2,\n    },\n    mappingLeftEdge: PARENT_INVOCATION_PADDING - 20,\n    mappingLeftSpacing: 10,\n    inputs: {},\n    outputs: {},\n    dependsOn: layoutExternalConnections(\n      flattenIO(op.inputs.map((d) => d.dependsOn)),\n      -EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n    dependedBy: layoutExternalConnections(\n      flattenIO(op.outputs.map((d) => d.dependedBy)),\n      layout.height + EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n  };\n\n  const boundingBottom = result.bounds.y + result.bounds.height;\n\n  op.inputs.forEach((input, idx) => {\n    result.inputs[input.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  op.outputs.forEach((output, idx) => {\n    result.outputs[output.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: boundingBottom + idx * IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: boundingBottom + idx * IO_HEIGHT + IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  return result;\n}\n\nfunction layoutExternalConnections(links: OpLinkInfo[], y: number, layoutWidth: number) {\n  // fill evenly from 0 to layoutWidth from left to right, then center them if there's overflow.\n  const inset = PARENT_INVOCATION_PADDING + PORT_INSET_X;\n  const insetWidth = layoutWidth - inset * 2;\n  const spacing = Math.max(200, insetWidth / links.length);\n  const baseX = inset + Math.min(0, (insetWidth - links.length * spacing) / 2);\n  const yShift = spacing < 300 ? 20 : 0;\n\n  const result: {[opName: string]: IPoint} = {};\n  links.forEach((link, idx) => {\n    const shiftDirection = 1 - (idx % 2) * 2; // 1 or -1, alternating\n    result[titleOfIO(link)] = {\n      x: baseX + idx * spacing,\n      y: y + yShift * shiftDirection,\n    };\n  });\n  return result;\n}\n\nexport function layoutOp(op: ILayoutOp, root: IPoint): OpLayout {\n  // Starting at the root (top left) X,Y, return the layout information for an op with\n  // input blocks, then the main block, then output blocks (arranged vertically).\n  //\n  // This code \"appends\" boxes vertically, advancing accY as it goes.\n  let accY = root.y;\n\n  const appendMiniIODots = <T extends ILayoutOp['inputs'][0] | ILayoutOp['outputs'][0]>(\n    ios: T[],\n    sortKey: (io: T) => string,\n    clusteringKey: (io: T) => string,\n  ) => {\n    // Sort both input and output boxes displayed on the graph alphabetically based on the input name.\n    // This means that if two ops are connected to each other multiple times, the lines do not cross.\n    const sorted = [...ios].sort((a, b) => sortKey(a).localeCompare(sortKey(b)));\n\n    let x = 0;\n    let last: OpLayoutIO;\n    let lastKey: string | null = null;\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    const spacing = Math.min(IO_MINI_WIDTH, OP_WIDTH / (sorted.length + 1));\n\n    // Add \"port\" layouts, collapsing the dots if they are connected to the same opposing solid\n    // (eg: two inputs connected to the same upstream output) with a \"[O] + 2\" style.\n    sorted.forEach((io, _idx) => {\n      const key = clusteringKey(io);\n      if (key !== lastKey) {\n        lastKey = key;\n        last = {\n          port: {\n            x: root.x + x + PORT_INSET_X,\n            y: accY + PORT_INSET_Y,\n          },\n          collapsed: [],\n          label: false,\n          layout: {\n            x: root.x + x,\n            y: accY,\n            width: IO_MINI_WIDTH,\n            height: IO_HEIGHT,\n          },\n        };\n        layouts[io.definition.name] = last;\n        x += spacing;\n      } else {\n        if (last.collapsed.length === 0) {\n          x += 15;\n        }\n        last.collapsed.push(io.definition.name);\n      }\n    });\n\n    // Center the items on the op rather than left justifying them\n    const centeringAdjustment = (OP_WIDTH - (x - PORT_INSET_X + IO_MINI_WIDTH)) / 2;\n    Object.values(layouts).forEach((l) => {\n      l.layout.x += centeringAdjustment;\n      l.port.x += centeringAdjustment;\n    });\n\n    // Place the next box beneath the\n    accY += IO_HEIGHT;\n\n    return layouts;\n  };\n\n  const appendStackedIOBoxes = (ios: ILayoutOp['inputs'] | ILayoutOp['outputs']) => {\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    ios.forEach((io) => {\n      layouts[io.definition.name] = {\n        port: {x: root.x + PORT_INSET_X, y: accY + PORT_INSET_Y},\n        label: true,\n        collapsed: [],\n        layout: {\n          x: root.x,\n          y: accY,\n          width: 0,\n          height: IO_HEIGHT,\n        },\n      };\n      accY += IO_HEIGHT;\n    });\n    return layouts;\n  };\n\n  const inputLayouts =\n    op.inputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.inputs,\n          (input) => input.definition.name,\n          (input) => input.dependsOn[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.inputs);\n\n  const opLayout: IBounds = {\n    x: root.x,\n    y: Math.max(root.y, accY - IO_INSET),\n    width: OP_WIDTH,\n    height: OP_BASE_HEIGHT + IO_INSET * 2,\n  };\n\n  accY += OP_BASE_HEIGHT;\n\n  if (op.definition.assetNodes.length && op.definition.description) {\n    opLayout.height += OP_ASSETS_ROW_HEIGHT;\n    accY += OP_ASSETS_ROW_HEIGHT;\n  }\n\n  const outputLayouts =\n    op.outputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.outputs,\n          (o) => o.dependedBy[0]?.definition.name || '',\n          (o) => o.dependedBy[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.outputs);\n\n  return {\n    bounds: {\n      x: root.x - 5,\n      y: root.y - 5,\n      width: OP_WIDTH + 10,\n      height: accY - root.y + 10,\n    },\n    op: opLayout,\n    inputs: inputLayouts,\n    outputs: outputLayouts,\n  };\n}\n","/* eslint-disable no-restricted-globals */\n\nimport {createWorkerThread} from 'shared/workers/WorkerThread.oss';\n\nimport {layoutAssetGraph} from '../asset-graph/layout';\nimport {layoutOpGraph} from '../graph/layout';\n/**\n * NOTE: Please avoid adding React as a transitive dependency to this file, as it can break\n * the development workflow. https://github.com/pmmmwh/react-refresh-webpack-plugin/issues/24\n *\n * If you see an error like `$RefreshReg$ is not defined` during development, check the\n * dependencies of this file. If you find that React has been included as a dependency, please\n * try to remove it.\n */\n\ncreateWorkerThread(\n  async (postMessage: (message: any) => void, data: any) => {\n    switch (data.type) {\n      case 'layoutOpGraph': {\n        const {ops, opts} = data;\n        postMessage(layoutOpGraph(ops, opts));\n        break;\n      }\n      case 'layoutAssetGraph': {\n        const {graphData, opts} = data;\n        postMessage(layoutAssetGraph(graphData, opts));\n      }\n    }\n  },\n  (_postMessage: (message: any) => void, error: Error) => {\n    console.error(error);\n  },\n);\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [6593,2048], () => (__webpack_require__(8447)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 6593) return \"static/chunks/framework-521ab4d753da6209.js\";\n\t// return url for filenames based on template\n\treturn \"static/chunks/\" + chunkId + \".\" + \"9c40c50b3ff03206\" + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var policy;\n__webpack_require__.tt = () => {\n\t// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.\n\tif (policy === undefined) {\n\t\tpolicy = {\n\t\t\tcreateScriptURL: (url) => (url)\n\t\t};\n\t\tif (typeof trustedTypes !== \"undefined\" && trustedTypes.createPolicy) {\n\t\t\tpolicy = trustedTypes.createPolicy(\"nextjs#bundler\", policy);\n\t\t}\n\t}\n\treturn policy;\n};","__webpack_require__.tu = (url) => (__webpack_require__.tt().createScriptURL(url));","__webpack_require__.p = \"BUILDTIME_ASSETPREFIX_REPLACE_ME/_next/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t8447: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.tu(__webpack_require__.p + __webpack_require__.u(chunkId)));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(6593),\n\t\t__webpack_require__.e(2048)\n\t]).then(next);\n};",null,"// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["FeatureFlag","flagAssetNodeFacets","__TestFlagDefaultTrue","DAGSTER_FLAGS_KEY","flags","Array","isArray","localStorage","setItem","JSON","stringify","BroadcastChannel","initializeFeatureFlags","getJSONForKey","stored","window","getItem","key","parse","undefined","migratedFlags","forEach","flag","setFeatureFlagsInternal","setFeatureFlags","broadcast","featureFlagsChannel","postMessage","weakMapMemoize","fn","options","ttl","WeakMap","lruCache","maxEntries","LRU","max","dispose","_key","cacheNode","result","timeoutId","childCount","parent","parentKey","recursivelyDeleteParent","value","weakMap","delete","map","noDisposeOnSet","h1","hashChunk","str","k1","i","length","remaining","Math","min","j","charCodeAt","c1","stack","type","obj","TYPE_ARRAY","index","TYPE_OBJECT","state","TYPE_PRIMITIVE","current","smallBuffer","toString","keys","Object","sort","arr","item","itemType","push","pop","padStart","IDBError","Error","constructor","message","originalError","name","memoize","Intl","NumberFormat","locale","minimumFractionDigits","maximumFractionDigits","Collator","navigator","language","sensitivity","toGraphId","path","graphId","__typename","pathHorizontalDiagonal","source","s","target","x","y","pathVerticalDiagonal","isGroupId","test","groupIdForNode","node","definition","repository","location","groupName","join","getUpstreamNodes","assetKey","graphData","currentUpstream","upstream","fromGraphId","flat","filter","key2","data","horizontal","ranker","direction","marginx","MARGIN","marginy","ranksep","rankdir","edgesep","nodesep","nodeHeight","groupPaddingTop","groupPaddingBottom","groupRendering","clusterpaddingtop","vertical","layoutAssetGraph","opts","layoutAssetGraphImpl","overrides","g","dagre","Graph","compound","config","assign","Config","facets","Set","setDefaultEdgeLabel","shouldRender","renderedNodes","values","nodes","expandedGroupsSet","expandedGroups","groups","id","expanded","has","repositoryName","repositoryLocationName","bounds","width","height","groupsPresent","groupId","setNode","borderType","ASSET_NODE_WIDTH","label","getAssetNodeDimensions2025","getAssetNodeDimensions","setParent","linksToAssetsOutsideGraphedSet","groupIdForAssetId","fromEntries","entries","downstream","upstreamId","graphDataDownstream","downstreamId","v","w","wGroup","vGroup","setEdge","weight","getAssetLinkDimensions","maxWidth","maxHeight","dagreNode","nodeLayout","group","extendBounds","padBounds","top","bottom","edges","e","vXInset","wXInset","from","fromId","to","toId","ASSET_LINK_NAME_MAX_LENGTH","a","padding","b","xmin","ymin","def","isPartitioned","isMaterializable","ASSET_NODE_STATUS_ROW_HEIGHT","ASSET_NODE_TAGS_HEIGHT","size","solid","DEFAULT_RESULT_NAME","flattenIO","arrays","array","titleOfIO","layoutExternalConnections","links","layoutWidth","insetWidth","inset","spacing","baseX","yShift","link","idx","layoutOp","op","root","accY","appendMiniIODots","ios","sortKey","clusteringKey","last","sorted","localeCompare","lastKey","layouts","OP_WIDTH","io","_idx","port","PORT_INSET_X","collapsed","PORT_INSET_Y","layout","IO_MINI_WIDTH","IO_HEIGHT","centeringAdjustment","l","appendStackedIOBoxes","inputLayouts","inputs","IO_THRESHOLD_FOR_MINI","input","dependsOn","opLayout","IO_INSET","OP_BASE_HEIGHT","assetNodes","description","OP_ASSETS_ROW_HEIGHT","outputLayouts","outputs","o","dependedBy","onMessage","ops","pipelineOps","layoutOpGraph","parentIOPadding","MARGIN_BASE","parentOp","PARENT_DEFINITION_PADDING","PARENT_INVOCATION_PADDING","setGraph","opNamesPresent","dep","point","opName","edgeName","dagreNodes","find","conn","c","points","edge","layoutParentGraphOp","invocationBoundingBox","mappingLeftEdge","mappingLeftSpacing","d","EXTERNAL_DEPENDENCY_PADDING","boundingBottom","output","onError","_postMessage","console","error","self","addEventListener","event","WEB_WORKER_FEATURE_FLAGS_KEY","String"],"sourceRoot":"","ignoreList":[5,15]}